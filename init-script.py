"""
Script pour initialiser les bases de donn√©es MongoDB et Neo4j avec les donn√©es de films.
Ce script effectue les op√©rations suivantes :
1. Importe les donn√©es depuis movies.json dans MongoDB
2. Cr√©e les n≈ìuds et relations dans Neo4j
"""

import os
import sys
import json
from mongodb_connect import MongoDBConnector
from neo4j_connect import Neo4jConnector

def load_team_members():
    """Demande et charge les noms des membres de l'√©quipe."""
    print("\nüë• Veuillez entrer les noms des membres de l'√©quipe (s√©par√©s par des virgules) :")
    team_input = input().strip()
    team_members = [name.strip() for name in team_input.split(",") if name.strip()]
    
    if not team_members:
        print("‚ö†Ô∏è Aucun membre d'√©quipe n'a √©t√© d√©fini.")
        return []
    
    print(f"‚úÖ {len(team_members)} membres d'√©quipe enregistr√©s.")
    return team_members

def initialize_mongodb(json_file="data/movies.json", local=True, connection_string=None):
    """Initialise MongoDB avec les donn√©es du fichier JSON."""
    print("\nüîÑ Initialisation de MongoDB...")
    
    # Cr√©er une connexion MongoDB
    mongo = MongoDBConnector(connection_string=connection_string, local=local)
    
    if not mongo.client:
        print("‚ùå √âchec de la connexion √† MongoDB.")
        return None
    
    # V√©rifier si le fichier JSON existe
    if not os.path.isfile(json_file):
        print(f"‚ùå Le fichier {json_file} n'existe pas.")
        return mongo
    
    # Importer les donn√©es
    mongo.import_json_data(json_file)
    
    return mongo

def initialize_neo4j(mongo_connector, local=True, uri=None, user=None, password=None):
    """Initialise Neo4j avec les donn√©es de MongoDB."""
    print("\nüîÑ Initialisation de Neo4j...")
    
    # Cr√©er une connexion Neo4j
    neo4j = Neo4jConnector(uri=uri, user=user, password=password, local=local)
    
    if not neo4j.graph:
        print("‚ùå √âchec de la connexion √† Neo4j.")
        return None
    
    # Cr√©er les contraintes et index
    print("\nüîÑ Cr√©ation des contraintes et index...")
    neo4j.create_constraints_and_indexes()
    
    if not mongo_connector or not mongo_connector.client:
        print("‚ùå MongoDB n'est pas connect√©, impossible d'importer les donn√©es.")
        return neo4j
    
    # Cr√©er les n≈ìuds Film
    print("\nüîÑ Cr√©ation des n≈ìuds Film...")
    neo4j.create_film_nodes(mongo_connector)
    
    # Cr√©er les n≈ìuds Actor et leurs relations
    print("\nüîÑ Cr√©ation des n≈ìuds Actor et leurs relations...")
    neo4j.create_actor_nodes_and_relationships(mongo_connector)
    
    # Cr√©er les n≈ìuds Director et leurs relations
    print("\nüîÑ Cr√©ation des n≈ìuds Director et leurs relations...")
    neo4j.create_director_nodes_and_relationships(mongo_connector)
    
    # Ajouter les membres de l'√©quipe
    team_members = load_team_members()
    if team_members:
        print("\nüîÑ Ajout des membres de l'√©quipe...")
        neo4j.create_team_nodes(team_members)
    
    return neo4j

def main():
    print("üöÄ Initialisation des bases de donn√©es pour le projet NoSQL...\n")
    
    # Demander √† l'utilisateur s'il utilise des connexions locales ou cloud
    use_local_mongodb = input("Utiliser MongoDB local? (O/n): ").lower() != 'n'
    mongo_connection_string = None
    
    if not use_local_mongodb:
        mongo_connection_string = input("Entrez la cha√Æne de connexion MongoDB Atlas: ")
    
    use_local_neo4j = input("Utiliser Neo4j local? (O/n): ").lower() != 'n'
    neo4j_uri = None
    neo4j_user = None
    neo4j_password = None
    
    if not use_local_neo4j:
        neo4j_uri = input("Entrez l'URI Neo4j: ")
        neo4j_user = input("Entrez le nom d'utilisateur Neo4j: ")
        neo4j_password = input("Entrez le mot de passe Neo4j: ")
    
    # Initialiser MongoDB
    mongo_connector = initialize_mongodb(
        local=use_local_mongodb,
        connection_string=mongo_connection_string
    )
    
    # Initialiser Neo4j
    if mongo_connector and mongo_connector.client:
        neo4j_connector = initialize_neo4j(
            mongo_connector,
            local=use_local_neo4j,
            uri=neo4j_uri,
            user=neo4j_user,
            password=neo4j_password
        )
    else:
        print("\n‚ö†Ô∏è Impossible d'initialiser Neo4j sans une connexion MongoDB fonctionnelle.")
    
    print("\nüéâ Initialisation termin√©e !")
    print("   Vous pouvez maintenant lancer l'application avec : streamlit run app.py")

if __name__ == "__main__":
    main()
